import os as _os
import sys as _sys
from dataclasses import dataclass as _dataclass
from pathlib import Path as _Path

if _sys.version_info >= (3, 11):
    import tomllib as _tomllib
else:
    import tomli as _tomllib


def cache_dir() -> _Path:
    """Return a directory to use as cache."""
    cache_path = _Path(_os.environ.get("CACHE_DIR", _Path.home() / ".cache" / __package__))
    if not cache_path.is_dir():
        cache_path.mkdir(exist_ok=True, parents=True)
    return cache_path


@_dataclass
class _AppSettings:
    @property
    def module_root(self) -> _Path:
        import {{ module_name }}

        return _Path({{ module_name }}.__file__).parents[1]


if "{{ module_name | upper }}_CONFIG" in _os.environ:
    _cfg_file = _Path(_os.environ.get("{{ module_name | upper }}_CONFIG", "cfg.toml"))
    _cfg = _tomllib.loads(_cfg_file.read_text())
    CFG = _AppSettings(**_cfg)
else:
    CFG = _AppSettings()
