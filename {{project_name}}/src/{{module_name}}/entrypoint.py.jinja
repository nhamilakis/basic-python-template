import argparse
import logging

from rich_argparse import RichHelpFormatter

from {{ module_name }} import __name__ as root_module_name
from {{ module_name }} import __version__

from .std import out

logger = logging.getLogger(root_module_name)


def argument_parser() -> argparse.Namespace:
    """CMD parsing."""
    parser = argparse.ArgumentParser(formatter_class=RichHelpFormatter)

    parser.add_argument("-q", "--quiet", action="store_true", help="Silence all outputs, except errors")
    parser.add_argument("-d", "--debug", action="store_true", help="Set debug logging")
    parser.add_argument("-i", "--info", action="store_true", help="Set Informative (verbose) logging.")
    parser.add_argument(
        "--version", action="version", version=f"[argparse.prog]%(prog)s[/] version [i]{__version__}[/]"
    )
    argv = parser.parse_args()

    # Setup output rules
    out.quiet = argv.quiet
    if argv.quiet:
        logger.setLevel(logging.ERROR)
    elif argv.debug:
        logger.setLevel(logging.DEBUG)
    elif argv.info:
        logger.setLevel(logging.INFO)
    else:
        logger.setLevel(logging.WARNING)

    return argv


def main() -> None:
    """Main Command-Line Interface."""
    argv = argument_parser()
    out.print(f"Hello from {__package__}")
